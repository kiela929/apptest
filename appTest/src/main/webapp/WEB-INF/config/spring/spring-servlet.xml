<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 서블릿이 만든 애플리케이션 컨텍스트임(설정정보). 여기는 그 이외의 여러 파일을 빈으로 등록하기. -->
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 애노테이션으로 등록한 것을 한번에 자동으로 올려줌. 요거는 빈 스캐너로 동작되면서 인식한 클래스를 빈으로 등록함! 
	web.xml에서 봤던 AnnotationConfigApplicationContext를 이용해도 됨. 이걸 사용하면 xml은 필요없겠지?-->
	<context:component-scan base-package="com.test.springbook" />
	 <context:component-scan base-package="com.twogather.dao" />
	
	
	
</beans:beans>
